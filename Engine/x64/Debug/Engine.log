  Downloading https://github.com/microsoft/vcpkg-tool/releases/download/2023-09-15/vcpkg.exe -> C:\Users\adria\Documents\GitHub\VertX-Game-Engine\vcpkg\vcpkg.exe... done.
  Validating signature... done.
  
  vcpkg package management program version 2023-09-15-ac02a9f660977426b8ec6392919fbb1d51b10998
  
  See LICENSE.txt for license information.
  Telemetry
  ---------
  vcpkg collects usage data in order to help us improve your experience.
  The data collected by Microsoft is anonymous.
  You can opt-out of telemetry by re-running the bootstrap-vcpkg script with -disableMetrics,
  passing --disable-metrics to vcpkg on the command line,
  or by setting the VCPKG_DISABLE_METRICS environment variable.
  
  Read more about vcpkg telemetry at docs/about/privacy.md
  Computing installation plan...
  The following packages are already installed:
      assimp:x64-windows -> 5.3.1#2
      devil[core,tiff,openexr,libpng,libjpeg,lcms,jasper]:x64-windows -> 1.8.0#11
      glew:x64-windows -> 2.2.0#3
      glm:x64-windows -> 2023-06-08
      jsoncpp:x64-windows -> 1.9.5#1
      opengl:x64-windows -> 2022-12-04#3
      sdl2[core,base]:x64-windows -> 2.28.4#1
  assimp:x64-windows is already installed
  devil:x64-windows is already installed
  glew:x64-windows is already installed
  glm:x64-windows is already installed
  jsoncpp:x64-windows is already installed
  opengl:x64-windows is already installed
  sdl2:x64-windows is already installed
  Total install time: 67 us
  assimp provides CMake targets:
  
    # this is heuristically generated, and may not be correct
    find_package(assimp CONFIG REQUIRED)
    target_link_libraries(main PRIVATE assimp::assimp)
  
  The package glew is compatible with built-in CMake targets:
  
      find_package(GLEW REQUIRED)
      target_link_libraries(main PRIVATE GLEW::GLEW)
  
  glm provides CMake targets:
  
      find_package(glm CONFIG REQUIRED)
      target_link_libraries(main PRIVATE glm::glm)
  
  jsoncpp provides CMake targets:
  
    # this is heuristically generated, and may not be correct
    find_package(jsoncpp CONFIG REQUIRED)
    target_link_libraries(main PRIVATE JsonCpp::JsonCpp)
  
  The package opengl is compatible with built-in CMake targets via CMake v3.7 and prior syntax
  
      find_package(OpenGL REQUIRED)
      target_link_libraries(main PRIVATE ${OPENGL_LIBRARIES})
      target_include_directories(main PRIVATE ${OPENGL_INCLUDE_DIR})
  
  and the CMake v3.8 and beyond imported target syntax
  
      find_package(OpenGL REQUIRED)
      target_link_libraries(main PRIVATE OpenGL::GL)
  
  introduction of various components
  
      find_package(OpenGL REQUIRED COMPONENTS GL      # v3.8
                                              GLU     # v3.8
                                              GLX     # v3.10
                                              EGL     # v3.10
                                              OpenGL) # v3.10
  
  The OpenGL SDK is highly platform dependent and is usually an OS component. It's not realistic to build from source for every platform.
  
      WINDOWS: is part of the Windows SDK which this package installs.
      LINUX: the SDK may be installed from your distro's repo or from 3rd parties manually. There are too many to count.
      APPLE: consult your distribution vendor on the state of OpenGL support: https://support.apple.com/en-us/HT202823
  
  sdl2 provides CMake targets:
  
      find_package(SDL2 CONFIG REQUIRED)
      target_link_libraries(main
          PRIVATE
          $<TARGET_NAME_IF_EXISTS:SDL2::SDL2main>
          $<IF:$<TARGET_EXISTS:SDL2::SDL2>,SDL2::SDL2,SDL2::SDL2-static>
      )
  
  ..\vcpkg\installed\x64-windows\bin\assimp-vc143-mt.dll
  ..\vcpkg\installed\x64-windows\bin\assimp-vc143-mt.pdb
  ..\vcpkg\installed\x64-windows\bin\DevIL.dll
  ..\vcpkg\installed\x64-windows\bin\DevIL.pdb
  ..\vcpkg\installed\x64-windows\bin\freeglut.dll
  ..\vcpkg\installed\x64-windows\bin\freeglut.pdb
  ..\vcpkg\installed\x64-windows\bin\glew32.dll
  ..\vcpkg\installed\x64-windows\bin\glew32.pdb
  ..\vcpkg\installed\x64-windows\bin\Iex-3_1.dll
  ..\vcpkg\installed\x64-windows\bin\Iex-3_1.pdb
  ..\vcpkg\installed\x64-windows\bin\IlmThread-3_1.dll
  ..\vcpkg\installed\x64-windows\bin\IlmThread-3_1.pdb
  ..\vcpkg\installed\x64-windows\bin\ILU.dll
  ..\vcpkg\installed\x64-windows\bin\ILU.pdb
  ..\vcpkg\installed\x64-windows\bin\ILUT.dll
  ..\vcpkg\installed\x64-windows\bin\ILUT.pdb
  ..\vcpkg\installed\x64-windows\bin\Imath-3_1.dll
  ..\vcpkg\installed\x64-windows\bin\Imath-3_1.pdb
  ..\vcpkg\installed\x64-windows\bin\jasper.dll
  ..\vcpkg\installed\x64-windows\bin\jasper.pdb
  ..\vcpkg\installed\x64-windows\bin\jpeg62.dll
  ..\vcpkg\installed\x64-windows\bin\jpeg62.pdb
  ..\vcpkg\installed\x64-windows\bin\jsoncpp.dll
  ..\vcpkg\installed\x64-windows\bin\jsoncpp.pdb
  ..\vcpkg\installed\x64-windows\bin\lcms2.dll
  ..\vcpkg\installed\x64-windows\bin\lcms2.pdb
  ..\vcpkg\installed\x64-windows\bin\liblzma.dll
  ..\vcpkg\installed\x64-windows\bin\liblzma.pdb
  ..\vcpkg\installed\x64-windows\bin\libpng16.dll
  ..\vcpkg\installed\x64-windows\bin\libpng16.pdb
  ..\vcpkg\installed\x64-windows\bin\minizip.dll
  ..\vcpkg\installed\x64-windows\bin\minizip.pdb
  ..\vcpkg\installed\x64-windows\bin\OpenEXR-3_1.dll
  ..\vcpkg\installed\x64-windows\bin\OpenEXR-3_1.pdb
  ..\vcpkg\installed\x64-windows\bin\OpenEXRCore-3_1.dll
  ..\vcpkg\installed\x64-windows\bin\OpenEXRCore-3_1.pdb
  ..\vcpkg\installed\x64-windows\bin\OpenEXRUtil-3_1.dll
  ..\vcpkg\installed\x64-windows\bin\OpenEXRUtil-3_1.pdb
  ..\vcpkg\installed\x64-windows\bin\pugixml.dll
  ..\vcpkg\installed\x64-windows\bin\pugixml.pdb
  ..\vcpkg\installed\x64-windows\bin\SDL2.dll
  ..\vcpkg\installed\x64-windows\bin\SDL2.pdb
  ..\vcpkg\installed\x64-windows\bin\tiff.dll
  ..\vcpkg\installed\x64-windows\bin\tiff.pdb
  ..\vcpkg\installed\x64-windows\bin\turbojpeg.dll
  ..\vcpkg\installed\x64-windows\bin\turbojpeg.pdb
  ..\vcpkg\installed\x64-windows\bin\zlib.pdb
  ..\vcpkg\installed\x64-windows\bin\zlib1.dll
         48 archivo(s) copiado(s).
  GameEngine.cpp
  Engine_ModuleRenderer3D.cpp
C:\Users\adria\Documents\GitHub\VertX-Game-Engine\Engine\Engine_ModuleRenderer3D.cpp(155,21): warning C4150: deletion of pointer to incomplete type 'SDL_Window'; no destructor called
C:\Users\adria\Documents\GitHub\VertX-Game-Engine\vcpkg\installed\x64-windows\include\SDL2\SDL_video.h(95): message : see declaration of 'SDL_Window'
  Engine_log.cpp
  Camera.cpp
  Camera.h
  Mesh.cpp
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xutility(142,1): warning C4267: 'argument': conversion from 'size_t' to 'unsigned int', possible loss of data
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\memory(2006): message : see reference to function template instantiation 'void std::_Construct_in_place<_Ty,Mesh::Formats,Mesh::V3T2*,unsigned __int64,unsigned int*,unsigned __int64>(_Ty &,Mesh::Formats &&,Mesh::V3T2 *&&,unsigned __int64 &&,unsigned int *&&,unsigned __int64 &&) noexcept(false)' being compiled
          with
          [
              _Ty=Mesh
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\memory(2725): message : see reference to function template instantiation 'std::_Ref_count_obj2<_Ty>::_Ref_count_obj2<Mesh::Formats,Mesh::V3T2*,unsigned __int64,unsigned int*,unsigned __int64>(Mesh::Formats &&,Mesh::V3T2 *&&,unsigned __int64 &&,unsigned int *&&,unsigned __int64 &&)' being compiled
          with
          [
              _Ty=Mesh
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\memory(2726): message : see reference to function template instantiation 'std::_Ref_count_obj2<_Ty>::_Ref_count_obj2<Mesh::Formats,Mesh::V3T2*,unsigned __int64,unsigned int*,unsigned __int64>(Mesh::Formats &&,Mesh::V3T2 *&&,unsigned __int64 &&,unsigned int *&&,unsigned __int64 &&)' being compiled
          with
          [
              _Ty=Mesh
          ]
C:\Users\adria\Documents\GitHub\VertX-Game-Engine\Engine\Mesh.cpp(44): message : see reference to function template instantiation 'std::shared_ptr<Mesh> std::make_shared<Mesh,Mesh::Formats,_Ty*,unsigned __int64,unsigned int*,unsigned __int64>(Mesh::Formats &&,_Ty *&&,unsigned __int64 &&,unsigned int *&&,unsigned __int64 &&)' being compiled
          with
          [
              _Ty=Mesh::V3T2
          ]
  Texture2D.cpp
  Generating Code...
x64\Debug\Camera.obj : warning LNK4042: object specified more than once; extras ignored
glu32.lib(GLU32.dll) : warning LNK4006: __NULL_IMPORT_DESCRIPTOR already defined in glew32.lib(glew32.dll); second definition ignored
opengl32.lib(OPENGL32.dll) : warning LNK4006: __NULL_IMPORT_DESCRIPTOR already defined in glew32.lib(glew32.dll); second definition ignored
sdl2.lib(SDL2.dll) : warning LNK4006: __NULL_IMPORT_DESCRIPTOR already defined in glew32.lib(glew32.dll); second definition ignored
  Engine.vcxproj -> C:\Users\adria\Documents\GitHub\VertX-Game-Engine\x64\Debug\Engine.lib
